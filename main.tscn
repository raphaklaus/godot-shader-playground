[gd_scene load_steps=16 format=2]

[ext_resource path="res://real_texture.png" type="Texture" id=1]
[ext_resource path="res://real_texture.gd" type="Script" id=2]
[ext_resource path="res://rain.jpg" type="Texture" id=3]
[ext_resource path="res://rainy-window2.jpg" type="Texture" id=4]
[ext_resource path="res://gradient.png" type="Texture" id=5]
[ext_resource path="res://TextureRect.gd" type="Script" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 tiled_factor = vec2(15.0, 5.0);
uniform float aspect_ratio = 0.5;

void fragment() {
	vec2 tiled_uvs = UV * tiled_factor;
	tiled_uvs.y *= aspect_ratio;
	
	vec2 uv_offset = vec2(0,0);
	
	//uv_offset.x = cos(TIME) * 0.05;
	//uv_offset.x = (TIME) * 0.5;
	//uv_offset.y = (TIME) * 0.5;
	uv_offset.x = ((TIME) + (tiled_uvs.x + tiled_uvs.y) * 1.5) + cos(TIME + (tiled_uvs.x + tiled_uvs.y) * 2.2);
	uv_offset.y = ((TIME) + (tiled_uvs.x + tiled_uvs.y) * 1.5) +  sin(TIME + (tiled_uvs.x + tiled_uvs.y) * 2.2);
	//uv_offset.y += 0.05;
	//COLOR = vec4(uv_offset * 0.5, 0.0, 1.0);
	COLOR = texture(TEXTURE, tiled_uvs + (uv_offset * 0.12));
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/tiled_factor = Vector2( 4.76, 4.79 )
shader_param/aspect_ratio = 0.886387

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

void fragment() {
	vec2 tiled_factor = vec2(5.0, 5.0);
	vec2 coords = UV;// * tiled_factor;
	vec2 offset = vec2(0.0,0.0);
	
	// experiment
	// if(UV.x > 0.6 && UV.x < 0.7) {
//	if(pow(UV.x - 0.5, 2) <= UV.x) {
//		offset.x = UV.x + sin(TIME)
//	}
	//coords.y = UV.y + sin(TIME) + (pow(UV.x - 0.5, 2) + pow(UV.y - 0.5, 2));
	
	// default
	if (pow(UV.x - 0.5, 2) + pow(UV.y - 0.5, 2) < sin(TIME / 2.0) ) {
	  offset.x = 0.15;// + sin(TIME);// + pow(UV.x - 0.5, 2) + pow(UV.x - 0.2, 2);
	  offset.y = 0.15;//+ sin(TIME);// + pow(UV.y - 0.5, 2) + pow(UV.y - 0.2, 2);
	}

	if (pow(UV.x - 0.5, 2) + pow(UV.y - 0.5, 2) < sin(TIME / 2.0) - 0.02 ) {
	  offset.x = 0.0;// + sin(TIME);// + pow(UV.x - 0.5, 2) + pow(UV.x - 0.2, 2);
	  offset.y = 0.0;//+ sin(TIME);// + pow(UV.y - 0.5, 2) + pow(UV.y - 0.2, 2);
	}

	//COLOR = vec4(coords + offset, 0.0, 1.0);
	COLOR = texture(TEXTURE, coords + offset);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D displacement_map: hint_black;

uniform vec2 dm_scale = vec2(1.0, 1.0);

uniform float tile_factor = 4.0;

void fragment() {
	vec2 base_uvs = UV * tile_factor;
	base_uvs += TIME * vec2(0.00, -1.00);
	vec2 base_uvs2 = UV;
	base_uvs2 += TIME * vec2(0.00, -1.00);
	
	vec2 altered_uvs = texture(displacement_map, base_uvs + base_uvs2).rg;
	altered_uvs = altered_uvs * 2.0 - 1.2;
	altered_uvs *= 0.05;
	
//	dm_uvs += vec2(2.0, 2.0) * TIME;
	//COLOR = texture(displacement_map, altered_uvs);
	COLOR = texture(TEXTURE, UV);
    COLOR = texture(TEXTURE, UV + altered_uvs);
}"

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/dm_scale = Vector2( 1, 1 )
shader_param/tile_factor = 4.0
shader_param/displacement_map = ExtResource( 3 )

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D gradient: hint_black;
uniform float cutoff: hint_range(0.0, 1.0);

void fragment() {
	float value = texture(gradient, UV).r;
	float alpha = step(cutoff, value);
	
	COLOR = vec4(COLOR.rgb, alpha);
}
	"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/cutoff = 0.0
shader_param/gradient = ExtResource( 5 )

[sub_resource type="Animation" id=9]
resource_name = "one"
length = 2.5
tracks/0/type = "value"
tracks/0/path = NodePath("../TextureRect:material:shader_param/cutoff")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2.5 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ 0.0, 1.0 ]
}

[node name="Node2D" type="Node2D"]

[node name="waves" type="Sprite" parent="."]
visible = false
material = SubResource( 2 )
position = Vector2( 640.403, 396.933 )
scale = Vector2( 13.7707, 12.2062 )
texture = ExtResource( 1 )
script = ExtResource( 2 )

[node name="simple_drop" type="Sprite" parent="."]
visible = false
material = SubResource( 4 )
position = Vector2( 514.48, 302.427 )
scale = Vector2( 11.0226, 9.26439 )
texture = ExtResource( 1 )

[node name="displacement_map" type="Sprite" parent="."]
visible = false
material = SubResource( 6 )
position = Vector2( 47.7381, 105.576 )
scale = Vector2( 0.643554, 0.8406 )
texture = ExtResource( 4 )

[node name="TextureRect" type="ColorRect" parent="."]
material = SubResource( 8 )
margin_right = 1028.0
margin_bottom = 599.0
color = Color( 0, 0, 0, 1 )
script = ExtResource( 6 )

[node name="AnimationPlayer" type="AnimationPlayer" parent="TextureRect"]
anims/one = SubResource( 9 )
[connection signal="item_rect_changed" from="waves" to="waves" method="calculate_aspect_ratio"]
